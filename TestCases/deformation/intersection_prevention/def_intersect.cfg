%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% case description:                                                            %
%   This is a test for the new implementation to prevent                       %
%   self-intersecting meshes                                                   %
%   after mesh deformation. You can run the test by first running SU2_CFD      %
%   and then SU2_DEF                                                           %
%   documentation: Lennaert Tol, Automatic Design Optimization of a Bunsen     %
%   Burner, MSc. Thesis Technische Universiteit Eindhoven (2020)               %
%   https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf        %
%   the new keywords are on line 374-397                                       %
% Author:                                                                      %
%   Lennaert Tol and Nijso Beishuizen                                          %
% Institution:                                                                 %
%   Technische Universiteit Eindhoven                                          %
% Date: 2021.01.08                                                             %
% File Version 7.0.8 "Blackbird"                                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES,
%                               WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,
%                               POISSON_EQUATION)
SOLVER = INC_NAVIER_STOKES

% Specify turbulent model (NONE, SA, SA_NEG, SST)
KIND_TURB_MODEL= NONE

% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT)
MATH_PROBLEM= DIRECT

% Restart solution (NO, YES)
RESTART_SOL = NO

AXISYMMETRIC = NO

%
% ---------------- INCOMPRESSIBLE FLOW CONDITION DEFINITION -------------------%
%
% Density model within the incompressible flow solver.
% Options are CONSTANT (default), BOUSSINESQ, or VARIABLE. If VARIABLE,
% an appropriate fluid model must be selected.

INC_DENSITY_MODEL= CONSTANT

% Solve the energy equation in the incompressible flow solver
INC_ENERGY_EQUATION = NO

% Initial density for incompressible flows
% (1.2886 kg/m^3 by default (air), 998.2 Kg/m^3 (water))
INC_DENSITY_INIT= 1.1728

% Initial velocity for incompressible flows (1.0,0,0 m/s by default)
INC_VELOCITY_INIT= (1.0, 0.0, 0.0 )

% Initial temperature for incompressible flows that include the 
% energy equation (288.15 K by default). Value is ignored if 
% INC_ENERGY_EQUATION is false.
INC_TEMPERATURE_INIT= 300.0

% List of inlet types for incompressible flows. List length must
% match number of inlet markers. Options: VELOCITY_INLET, PRESSURE_INLET.
INC_INLET_TYPE= VELOCITY_INLET
%
% Damping coefficient for iterative updates at pressure inlets. (0.1 by default)
INC_INLET_DAMPING= 0.1

% List of outlet types for incompressible flows. List length must
% match number of outlet markers. Options: PRESSURE_OUTLET, MASS_FLOW_OUTLET
INC_OUTLET_TYPE= PRESSURE_OUTLET
%
% Damping coefficient for iterative updates at mass flow outlets. (0.1 by default)
INC_OUTLET_DAMPING= 0.1

% Non-dimensionalization scheme for incompressible flows. Options are
% INITIAL_VALUES (default), REFERENCE_VALUES, or DIMENSIONAL.
% INC_*_REF values are ignored unless REFERENCE_VALUES is chosen.
INC_NONDIM= DIMENSIONAL


% ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%
%
% Fluid model (STANDARD_AIR, IDEAL_GAS, VW_GAS, PR_GAS, 
%              CONSTANT_DENSITY, INC_IDEAL_GAS)
FLUID_MODEL= CONSTANT_DENSITY
%
% Specific heat at constant pressure, Cp (1004.703 J/kg*K (air)).
% Incompressible fluids with energy eqn. only (CONSTANT_DENSITY, INC_IDEAL_GAS).
SPECIFIC_HEAT_CP= 1004.703

% --------------------------- VISCOSITY MODEL ---------------------------------%
%
% Viscosity model (SUTHERLAND, CONSTANT_VISCOSITY).
VISCOSITY_MODEL= CONSTANT_VISCOSITY
%
% Molecular Viscosity that would be constant (1.716E-5 by default)
MU_CONSTANT= 1.83463e-05

% --------------------------- THERMAL CONDUCTIVITY MODEL ----------------------%
%
% Conductivity model (CONSTANT_CONDUCTIVITY, CONSTANT_PRANDTL).
CONDUCTIVITY_MODEL= CONSTANT_PRANDTL
%
% Laminar Prandtl number (0.72 (air), only for CONSTANT_PRANDTL)
PRANDTL_LAM= 0.72
%
% Turbulent Prandtl number (0.9 (air), only for CONSTANT_PRANDTL)
PRANDTL_TURB= 0.90

% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%

% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.00
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00

% Reference length for pitching, rolling, and yawing non-dimensional moment
REF_LENGTH= 1.0

% Reference area for force coefficients (0 implies automatic calculation)
REF_AREA= 0.0

% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%

% Navier-Stokes wall boundary marker(s) (NONE = no marker)

MARKER_PLOTTING = (outlet)
MARKER_ANALYZE = (outlet)

MARKER_HEATFLUX= (wall_inner_bottom, 0.0, wall_inner_right, 0.0, wall_inner_top, 0.0)

SPECIFIED_INLET_PROFILE= NO

INLET_FILENAME = inletVelocity.dat

INLET_MATCHING_TOLERANCE= 1e-5

% Inlet boundary marker(s)
MARKER_INLET = (inlet, 300.0, 1.0, 1.0, 0.0, 0.0)

% Outler boundary marker (s)
MARKER_OUTLET = (outlet, 0.0)

% Symmetry boundary marker
MARKER_SYM = (wall_outer)

% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= (outlet)

% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%

% Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= GREEN_GAUSS

% Courant-Friedrichs-Lewy condition of the finest grid

CFL_NUMBER=100

% Adaptive CFL number (NO, YES)
CFL_ADAPT= NO

% Parameters of the adaptive CFL number (factor down, factor up, CFL min value,
%                                        CFL max value )
CFL_ADAPT_PARAM= ( 1.5, 0.5, 1.0, 100.0 )


% Runge-Kutta alpha coefficients
RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )

% Number of total iterations
%EXT_ITER = 25
ITER = 10000

% Writing solution file frequency
OUTPUT_WRT_FREQ= 50

% ------------------------ LINEAR SOLVER DEFINITION ---------------------------%

% Linear solver for implicit formulations (BCGSTAB, FGMRES)
LINEAR_SOLVER= FGMRES

% Preconditioner of the Krylov linear solver (JACOBI, LINELET, LU_SGS)
LINEAR_SOLVER_PREC= ILU

% Minimum error of the linear solver for implicit formulations
LINEAR_SOLVER_ERROR= 1E-10

% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 100

% -------------------------- MULTIGRID PARAMETERS -----------------------------%

% Multi-Grid Levels (0 = no multi-grid)
MGLEVEL= 0

% Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE)
MGCYCLE= V_CYCLE

% Multi-grid pre-smoothing level
MG_PRE_SMOOTH= ( 1, 2, 3, 3 )

% Multi-grid post-smoothing level
MG_POST_SMOOTH= ( 0, 0, 0, 0 )

% Jacobi implicit smoothing of the correction
MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 )

% Damping factor for the residual restriction
MG_DAMP_RESTRICTION= 0.8

% Damping factor for the correction prolongation
MG_DAMP_PROLONGATION= 0.8

% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%

% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,
%                              TURKEL_PREC, MSW)
CONV_NUM_METHOD_FLOW= FDS

% Monotonic Upwind Scheme for Conservation Laws (TVD) in the flow equations.
%           Required for 2nd order upwind schemes (NO, YES)
MUSCL_FLOW= NO

% Slope limiter (VENKATAKRISHNAN, MINMOD)
SLOPE_LIMITER_FLOW= NONE

% Coefficient for the limiter (smooth regions)
VENKAT_LIMITER_COEFF= 10.0

% 2nd and 4th order artificial dissipation coefficients
JST_SENSOR_COEFF= ( 0.05, 0.02 )

% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT

CONV_NUM_METHOD_ADJFLOW= FDS
ADJ_JST_SENSOR_COEFF= ( 0.05, 0.02 )
CFL_REDUCTION_ADJFLOW= 0.5
TIME_DISCRE_ADJFLOW= EULER_IMPLICIT

% --------------------------- CONVERGENCE PARAMETERS --------------------------%

% Convergence criteria (CAUCHY, RESIDUAL)
CONV_CRITERIA= RESIDUAL

% Min value of the residual (log10 of the residual)
%RESIDUAL_MINVAL= -13
CONV_RESIDUAL_MINVAL= -10

% Start convergence criteria at iteration number
CONV_STARTITER= 100

% Number of elements to apply the criteria
CONV_CAUCHY_ELEMS= 20

% Epsilon to control the series convergence
CONV_CAUCHY_EPS= 1E-6

% Function to apply the criteria (LIFT, DRAG, NEARFIELD_PRESS, SENS_GEOMETRY, 
% 	      	    		 SENS_MACH, DELTA_LIFT, DELTA_DRAG)

SCREEN_OUTPUT = INNER_ITER WALL_TIME RMS_PRESSURE RMS_VELOCITY-X RMS_ADJ_PRESSURE RMS_ADJ_VELOCITY-X U
CONV_FIELD = (RMS_PRESSURE, RMS_ADJ_PRESSURE)

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%



% Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT= SU2

% Restart flow input file
%SOLUTION_FLOW_FILENAME= solution_flow.dat
SOLUTION_FILENAME= solution_flow.dat

% Restart adjoint input file
SOLUTION_ADJ_FILENAME= solution_adj.dat

% Output file format (PARAVIEW, PARAVIEW_BINARY, TECPLOT, STL)
OUTPUT_FILES = (RESTART, PARAVIEW_ASCII, SURFACE_CSV) 
TABULAR_FORMAT = CSV

% Output file convergence history (w/o extension) 
CONV_FILENAME= history

% Output file restart flow
%RESTART_FLOW_FILENAME= restart_flow.dat
RESTART_FILENAME= restart_flow.dat

% Output file restart adjoint
RESTART_ADJ_FILENAME= restart_adj.dat

% Output file flow (w/o extension) variables
%VOLUME_FLOW_FILENAME= flow
VOLUME_FILENAME= flow

% Output file adjoint (w/o extension) variables
VOLUME_ADJ_FILENAME= adjoint

% Output objective function gradient (using continuous adjoint)
GRAD_OBJFUNC_FILENAME= of_grad.dat

% Output file surface flow coefficient (w/o extension)
%SURFACE_FLOW_FILENAME= surface_flow
SURFACE_FILENAME= surface_flow

% Output file surface adjoint coefficient (w/o extension)
SURFACE_ADJ_FILENAME= surface_adjoint

VOLUME_OUTPUT= RESIDUAL PRIMITIVE SOURCE SENSITIVITY COEFFICIENT

% Writing convergence history frequency
SCREEN_WRT_FREQ_INNER = 1
SCREEN_WRT_FREQ_OUTER = 1

% ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%
%
% Kind of deformation (NO_DEFORMATION, TRANSLATION, ROTATION, SCALE,
%                      FFD_SETTING, FFD_NACELLE
%                      FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST
%                      FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_TWIST_2D,
%                      HICKS_HENNE, SURFACE_BUMP)

DV_KIND= FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D 

MESH_FILENAME = mesh_ffd.su2

% Mesh output file
MESH_OUT_FILENAME= mesh_ffd_deformed.su2

% Marker of the surface in which we are going apply the shape deformation
DV_MARKER= (wall_inner_bottom, wall_inner_right, wall_inner_top)

% Parameters of the shape deformation
DV_PARAM= (MAIN_BOX, 0, 0, 0.0, 1.0); (MAIN_BOX, 1, 0, 0.0, 1.0); (MAIN_BOX, 2, 0, 0.0, 1.0); (MAIN_BOX, 3, 0, 0.0, 1.0); (MAIN_BOX, 4, 0, 0.0, 1.0); (MAIN_BOX, 5, 0, 0.0, 1.0); (MAIN_BOX, 6, 0, 0.0, 1.0); (MAIN_BOX, 7, 0, 0.0, 1.0); (MAIN_BOX, 8, 0, 0.0, 1.0); (MAIN_BOX, 9, 0, 0.0, 1.0); (MAIN_BOX, 10, 0, 0.0, 1.0); (MAIN_BOX, 0, 1, 0.0, 1.0); (MAIN_BOX, 1, 1, 0.0, 1.0); (MAIN_BOX, 2, 1, 0.0, 1.0); (MAIN_BOX, 3, 1, 0.0, 1.0); (MAIN_BOX, 4, 1, 0.0, 1.0); (MAIN_BOX, 5, 1, 0.0, 1.0); (MAIN_BOX, 6, 1, 0.0, 1.0); (MAIN_BOX, 7, 1, 0.0, 1.0); (MAIN_BOX, 8, 1, 0.0, 1.0); (MAIN_BOX, 9, 1, 0.0, 1.0); (MAIN_BOX, 10, 1, 0.0, 1.0) 

% Value of the shape deformation
DV_VALUE = 0, 0.0002, 0.0004, 0.0006, 0.0008, 0.001, 0.0012, 0.0014, 0.0016, 0.0018, 0.002, 0,-0.0002, -0.0004, -0.0006, -0.0008, -0.0010, -0.0012, -0.0014, -0.0016, -0.0018, -0.002

% ------------------------ GRID DEFORMATION PARAMETERS ------------------------%
%
% Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB)
DEFORM_LINEAR_SOLVER= FGMRES
%
% Number of smoothing iterations for mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 1000
%
% Number of nonlinear deformation iterations (surface deformation increments)
DEFORM_NONLINEAR_ITER= 1
%
% Print the residuals during mesh deformation to the console (YES, NO)
DEFORM_CONSOLE_OUTPUT= YES
%
% Factor to multiply smallest cell volume for deform tolerance (0.001 default)
% DEFORM_TOL_FACTOR = 1e-10
DEFORM_LINEAR_SOLVER_ERROR = 1e-5
%
% Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME,
%                                          WALL_DISTANCE, CONSTANT_STIFFNESS)
DEFORM_STIFFNESS_TYPE= WALL_DISTANCE
%


% -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%
%
% Tolerance of the Free-Form Deformation point inversion
FFD_TOLERANCE= 1E-10

% Maximum number of iterations in the Free-Form Deformation point inversion
FFD_ITERATIONS= 500

% ----- CHECK AND REPAIR MESH INTERSECTION ------------------------- %
% Parameters to check and repair self-intersections within FFD box 
% (after deformation)
%
% switch on the intersection prevention
FFD_INTPREV = YES
% number of deformation iterations to make sure that the self-intersection has been resolved
FFD_INTPREV_ITER = 2
% number of times we half the deformation size within the iteration 
FFD_INTPREV_DEPTH= 3

% ----- CHECK AND REPAIR NONCONVEX CELLS  ------------------------- %
% Parameters to check and repair nonconvex elements in mesh 
% (after deformation)
%
% switch on the check for convexity of cells
CONVEXITY_CHECK = YES
% number of iterations 
CONVEXITY_CHECK_ITER = 10
% number of times we half the deformation size within the iteration
CONVEXITY_CHECK_DEPTH = 3
% -------------------------------------------------------------------------- %

%
% FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,
%                              X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8)
%                     2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,
%                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
FFD_DEFINITION= (MAIN_BOX, 0.02, 0.005, 0,   0.05, 0.005, 0.0,   0.05, 0.007, 0.0,   0.02, 0.007, 0.0,   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)

%
% FFD box degree: 3D case (x_degree, y_degree, z_degree)
%                 2D case (x_degree, y_degree, 0)
FFD_DEGREE= ( 10, 1, 0)

%
% Surface continuity at the intersection with the FFD (1ST_DERIVATIVE, 2ND_DERIVATIVE)
FFD_CONTINUITY= USER_INPUT

%
% Optimization objective function with scaling factor, separated by semicolons.
% To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.
% ex= Objective * Scale
%OPT_OBJECTIVE= TOTAL_HEATFLUX * 1e-5
OPT_OBJECTIVE= DRAG*5.0e-3

%
% Optimization constraint functions with pushing factors (affects its value, not the gradient  in the python scripts), separated by semicolons
% ex= (Objective = Value ) * Scale, use '>','<','='
OPT_CONSTRAINT= NONE

%
% Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts)
% In general, a norm of the gradient ~1E-6 is desired.
OPT_GRADIENT_FACTOR= 1.0
%
% Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF)
% In general, surface deformations of 0.01'' or 0.0001m are desirable
OPT_RELAX_FACTOR= 1.0
%
% Maximum number of iterations
OPT_ITERATIONS= 20
%
% Requested accuracy
OPT_ACCURACY= 1E-200

% Optimization bound (bounds the line search in SU2_DEF)
OPT_LINE_SEARCH_BOUND= 1E6
%
% Upper bound for each design variable (bound in the python optimizer)
OPT_BOUND_UPPER =  1e10
OPT_BOUND_LOWER = -1e10

%
% Finite difference step size for python scripts (0.001 default, recommended
%                                                                                                 0.001 x REF_LENGTH)
FIN_DIFF_STEP = 1e-3
%
DEFINITION_DV= (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 0, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 1, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 2, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 3, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 4, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 5, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 6, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 7, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 8, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 9, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 10, 0, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 0, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 1, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 2, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 3, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 4, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 5, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 6, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 7, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 8, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 9, 1, 0.0, 1.0); (19, 1.0 | wall_inner_bottom, wall_inner_right, wall_inner_top | MAIN_BOX, 10, 1, 0.0, 1.0) 
