% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES,
%                               WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,
%                               POISSON_EQUATION) 
SOLVER= EULER
%
% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT)
MATH_PROBLEM= DISCRETE_ADJOINT
%
% Restart solution (NO, YES)
RESTART_SOL= NO

TIME_ITER= 5
INNER_ITER= 50

%EXT_ITER= 151
%UNST_INT_ITER= 110
SCREEN_OUTPUT=(TIME_ITER, INNER_ITER, RMS_ADJ_DENSITY, RMS_ADJ_ENERGY, SENS_PRESS, SENS_AOA)
% ------------------------- UNSTEADY SIMULATION -------------------------------%
%
% Unsteady simulation (NO, TIME_STEPPING, DUAL_TIME_STEPPING-1ST_ORDER,
%                      DUAL_TIME_STEPPING-2ND_ORDER)
TIME_DOMAIN= YES
TIME_MARCHING= DUAL_TIME_STEPPING-2ND_ORDER
%
% Time Step for dual time stepping simulations (s)
TIME_STEP= 0.0023555025613149587
% 24 steps per period: 0.0024536485013697488
% 25 steps per period: 0.0023555025613149587
%
% Total Physical Time for dual time stepping simulations (s)
% 150 steps
MAX_TIME= 0.354
%
% Iteration number to begin unsteady restarts
RESTART_ITER= 10
%
% Starting direct iteration for unsteady adjoint
UNST_ADJOINT_ITER= 151

% ----------------------- DYNAMIC MESH DEFINITION -----------------------------%
%
% Dynamic mesh simulation (NO, YES)
GRID_MOVEMENT= RIGID_MOTION
%
% Motion mach number (non-dimensional). Used for initializing a viscous flow
% with the Reynolds number and for computing force coeffs. with dynamic meshes.
MACH_MOTION= 0.796
%
% Coordinates of the rigid motion origin
MOTION_ORIGIN= (0.248 0.0 0.0)
%
% Pitching angular freq. (rad/s) about x, y, & z axes (RIGID_MOTION only)
PITCHING_OMEGA= (0.0 0.0 106.69842)
%
% Pitching amplitude (degrees) about x, y, & z axes (RIGID_MOTION only)
PITCHING_AMPL= (0.0 0.0 1.01)

% -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%
%
% Mach number (non-dimensional, based on the free-stream values)
MACH_NUMBER= 0.8
%
% Angle of attack (degrees)
AOA= 1.25
%
% Free-stream pressure (101325.0 N/m^2 by default, only Euler flows)  
FREESTREAM_PRESSURE= 101325.0
%
% Free-stream temperature (288.15 K by default)
FREESTREAM_TEMPERATURE= 288.15

% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.25
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00
%
% Reference length for pitching, rolling, and yawing non-dimensional moment
REF_LENGTH= 1.0
%
% Reference area for force coefficients (0 implies automatic calculation)
REF_AREA= 1.0
%
% Flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,
%                              FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE)
REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE

% ----------------------- BOUNDARY CONDITION DEFINITION -----------------------%
%
% Marker of the Euler boundary (0 = no marker)
MARKER_EULER= ( airfoil )
%
% Marker of the far field (0 = no marker)
MARKER_FAR= ( farfield )

% ------------------------ SURFACES IDENTIFICATION ----------------------------%
%
% Marker of the surface which is going to be plotted or designed
MARKER_PLOTTING= ( airfoil )
%
% Marker of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= ( airfoil )

% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= GREEN_GAUSS
%
% Courant-Friedrichs-Lewy condition of the finest grid
CFL_NUMBER= 10.0
%
% Adaptive CFL number (NO, YES)
CFL_ADAPT= NO
%
% Parameters of the adaptive CFL number (factor down, factor up, CFL min value,
%                                        CFL max value )
CFL_ADAPT_PARAM= ( 1.5, 0.5, 1.0, 100.0 )
%
% Runge-Kutta alpha coefficients
RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )
%

% ------------------------ LINEAR SOLVER DEFINITION ---------------------------%
%
% Linear solver for the implicit (or discrete adjoint) formulation (LU_SGS,
%                                              SYM_GAUSS_SEIDEL, BCGSTAB, GMRES)
LINEAR_SOLVER= FGMRES
%
% Preconditioner of the Krylov linear solver (NONE, JACOBI, LINELET, LUSGS)
LINEAR_SOLVER_PREC= ILU
%
% Min error of the linear solver for the implicit formulation
LINEAR_SOLVER_ERROR= 1E-4
%
% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 2

% -------------------------- MULTIGRID PARAMETERS -----------------------------%
%
% Multi-Grid Levels (0 = no multi-grid)
MGLEVEL= 2
%
% Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE)
MGCYCLE= V_CYCLE
%
% Multi-Grid PreSmoothing Level
MG_PRE_SMOOTH= ( 1, 2, 3, 3 )
%
% Multi-Grid PostSmoothing Level
MG_POST_SMOOTH= ( 0, 0, 0, 0 )
%
% Jacobi implicit smoothing of the correction
MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 )
%
% Damping factor for the residual restriction
MG_DAMP_RESTRICTION= 1.0
%
% Damping factor for the correction prolongation
MG_DAMP_PROLONGATION= 1.0

% --------------------- FLOW NUMERICAL METHOD DEFINITION ----------------------%
% Convective numerical method (JST, LAX-FRIEDRICH, ROE-1ST_ORDER, 
%                              ROE-2ND_ORDER)
CONV_NUM_METHOD_FLOW= JST
%
% Slope limiter (VENKATAKRISHNAN)
SLOPE_LIMITER_FLOW= VENKATAKRISHNAN
%
% 2nd and 4th order artificial dissipation coefficients
JST_SENSOR_COEFF= ( 0.5, 0.02 )
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT

% ---------------- ADJOINT-FLOW NUMERICAL METHOD DEFINITION -------------------%
% Adjoint problem boundary condition (DRAG, LIFT, SIDEFORCE, MOMENT_X,
%                                     MOMENT_Y, MOMENT_Z, EFFICIENCY, 
%                                     EQUIVALENT_AREA, NEARFIELD_PRESSURE,
%                                     FORCE_X, FORCE_Y, FORCE_Z, THRUST, 
%                                     TORQUE, FREE_SURFACE)
OBJECTIVE_FUNCTION= EFFICIENCY
OPT_OBJECTIVE= EFFICIENCY
%
% Convective numerical method (JST, LAX-FRIEDRICH, ROE-1ST_ORDER, 
%                              ROE-2ND_ORDER)
CONV_NUM_METHOD_ADJFLOW= JST
%
% Slope limiter (VENKATAKRISHNAN, SHARP_EDGES)
SLOPE_LIMITER_ADJFLOW= VENKATAKRISHNAN
%
% 2nd, and 4th order artificial dissipation coefficients
ADJ_JST_SENSOR_COEFF= ( 0.0, 0.02 )
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT)
TIME_DISCRE_ADJFLOW= EULER_IMPLICIT
%
% Reduction factor of the CFL coefficient in the adjoint problem
CFL_REDUCTION_ADJFLOW= 0.8
%
% Limit value for the adjoint variable
LIMIT_ADJFLOW= 1E6

% -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%
%
% Tolerance of the Free-Form Deformation point inversion
FFD_TOLERANCE= 1E-10
%
% Maximum number of iterations in the Free-Form Deformation point inversion
FFD_ITERATIONS= 500
%
% FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,
%                              X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8)
%                     2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,
%                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
FFD_DEFINITION= (airfoil_box, -0.1, -0.25, 0, 1.1, -0.25, 0, 1.1, 0.25, 0, -0.1, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
%
% FFD box degree: 3D case (x_degree, y_degree, z_degree)
%                 2D case (x_degree, y_degree, 0)
FFD_DEGREE= (10, 1, 0)
%
% Surface continuity at the intersection with the FFD (1ST_DERIVATIVE, 2ND_DERIVATIVE)
FFD_CONTINUITY= 2ND_DERIVATIVE

% ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%
%
% Kind of deformation (FFD_SETTING, FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D,
%                      HICKS_HENNE, COSINE_BUMP, PARABOLIC,
%                      NACA_4DIGITS, DISPLACEMENT, ROTATION, FFD_CONTROL_POINT,
%                      FFD_DIHEDRAL_ANGLE, FFD_TWIST_ANGLE, FFD_ROTATION,
%                      FFD_CAMBER, FFD_THICKNESS, FFD_CONTROL_SURFACE, SURFACE_FILE, AIRFOIL)
%DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT
DV_KIND= FFD_SETTING
%
% Marker of the surface in which we are going apply the shape deformation
DV_MARKER= ( airfoil )
%
% Parameters of the shape deformation
%       - FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp )
%       - FFD_DIHEDRAL_ANGLE ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
%       - FFD_TWIST_ANGLE ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
%       - FFD_ROTATION ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
%       - FFD_CAMBER ( FFD_BoxTag, i_Ind, j_Ind )
%       - FFD_THICKNESS ( FFD_BoxTag, i_Ind, j_Ind )
%       - FFD_VOLUME ( FFD_BoxTag, i_Ind, j_Ind )
%DV_PARAM= ( airfoil_box, 0, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 1, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 2, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 3, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 4, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 5, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 6, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 7, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 8, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 9, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 10, 0, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 0, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 1, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 2, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 3, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 4, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 5, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 6, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 7, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 8, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 9, 1, 0, 0.0, 1.0, 0.0 ); ( airfoil_box, 10, 1, 0, 0.0, 1.0, 0.0 )
DV_PARAM= ( airfoil_box, 5, 0, 0, 0.0, 1.0, 0.0 )
%
% New value of the shape deformation
%DV_VALUE= 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05
DV_VALUE= 0.05

% ------------------------ GRID DEFORMATION PARAMETERS ------------------------%
%
% Number of smoothing iterations for FEA mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 500
%
% Number of nonlinear deformation iterations (surface deformation increments)
DEFORM_NONLINEAR_ITER= 1
%
% Print the residuals during mesh deformation to the console (YES, NO)
DEFORM_CONSOLE_OUTPUT= YES
%
% Factor to multiply smallest cell volume for deform tolerance (0.001 default)
DEFORM_LINEAR_SOLVER_ERROR = 0.000000001
%
% Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME, 
%                                          WALL_DISTANCE, CONSTANT_STIFFNESS)
DEFORM_STIFFNESS_TYPE= INVERSE_VOLUME

% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
% Min value of the residual (log10 of the residual)
CONV_RESIDUAL_MINVAL= -20
%
% Start Cauchy criteria at iteration number
CONV_STARTITER= 10
%
% Number of elements to apply the criteria
CONV_CAUCHY_ELEMS= 100
%
% Epsilon to control the series convergence
CONV_CAUCHY_EPS= 1E-6

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
% Mesh input file
MESH_FILENAME= mesh_NACA0012_inv_FFD.su2
%
% Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT= SU2
%
% Mesh output file
MESH_OUT_FILENAME= mesh_out.su2
%
% Restart flow input file
SOLUTION_FILENAME= solution_flow.dat
%
% Restart adjoint input file
SOLUTION_ADJ_FILENAME= solution_adj.dat
%
% Output file format (PARAVIEW, TECPLOT)
TABULAR_FORMAT= CSV
%
% Output file convergence history (w/o extension) 
CONV_FILENAME= history
%
% Output file restart flow
RESTART_FILENAME= restart_flow.dat
%
% Output file restart adjoint
RESTART_ADJ_FILENAME= restart_adj.dat
%
% Output file flow (w/o extension) variables
VOLUME_FILENAME= flow
%
% Output file adjoint (w/o extension) variables
VOLUME_ADJ_FILENAME= adjoint
%
% Output Objective function gradient (using continuous adjoint)
GRAD_OBJFUNC_FILENAME= of_grad.dat
%
% Output file surface flow coefficient (w/o extension)
SURFACE_FILENAME= surface_flow
%
% Output file surface adjoint coefficient (w/o extension)
SURFACE_ADJ_FILENAME= surface_adjoint
%
% Writing solution file frequency
WRT_SOL_FREQ= 250
%
% Writing solution file frequency for physical time steps (dual time)
WRT_SOL_FREQ_DUALTIME= 1
%
% Writing convergence history frequency
WRT_CON_FREQ= 1
%
% Writing convergence history frequency (dual time, only written to screen)
WRT_CON_FREQ_DUALTIME= 10
%
% Output rind layers in the solution files
WRT_HALO= NO

% Optimization design variables, separated by semicolons
% FFD_CONTROL_POINT (Y)
DEFINITION_DV= ( 11, 1.0 | airfoil | airfoil_box, 0, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 1, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 2, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 3, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 4, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 5, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 6, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 7, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 8, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 9, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 10, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 0, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 1, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 2, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 3, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 4, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 5, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 6, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 7, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 8, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 9, 1, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | airfoil | airfoil_box, 10, 1, 0, 0.0, 1.0, 0.0 )

