%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: NACA0012 detached subsonic unsteady flow                   %
% Author: Steffen SchotthÃ¶fer                                                  %
% Institution: TU Kaiserslautern                                               %
% Date: Mar 16, 2017                                                           %
% File Version 7.0.6 "Blackbird"                                               %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ------------ Information about this test case -------------------------------%
%  The test case checks, if the discrete_adjoint.py script works correctly with restart files and 
%  an only adjoint computation. The test case is an unsteady (time-dependent) problem.
%
% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES, NS_PLASMA)                    
SOLVER= RANS
% Specify turbulent model (NONE, SA, SA_NEG, SST)
KIND_TURB_MODEL= SA
% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT)
MATH_PROBLEM= DISCRETE_ADJOINT
% Objective function
OBJECTIVE_FUNCTION=DRAG
% Restart solution (NO, YES)
RESTART_SOL= YES
% Restart iteration
RESTART_ITER = 10
%
% ------------------------- UNSTEADY SIMULATION -------------------------------%
%
% Time Domain
TIME_DOMAIN = YES
% Unsteady simulation
TIME_MARCHING= DUAL_TIME_STEPPING-2ND_ORDER
% Time Step for dual time stepping simulations (s)
TIME_STEP= 5e-4
% Total Physical Time for dual time stepping simulations (s)
MAX_TIME= 105000
%Maximum Number of physical time steps used for primal and ajoint run.
TIME_ITER= 13
% Number of internal iterations (dual time method)
INNER_ITER= 2
%Number of iterations to average the objective 
ITER_AVERAGE_OBJ =  3      
%Iteration number to begin the reverse time integration in the direct solver for the unsteady adjoint.
UNST_ADJOINT_ITER = 13
% Start iteration for windowing
WINDOW_START_ITER = 10 
% Window used for reverse sweep. Options (SQUARE, HANN, HANN_SQUARE, BUMP)
WINDOW_FUNCTION = SQUARE
%
% -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%
%
% Mach number (non-dimensional, based on the free-stream values)
MACH_NUMBER= 0.3
% Angle of attack (degrees, only for compressible flows)
AOA= 17.0
% De-Dimensionalization
REF_DIMENSIONALIZATION = DIMENSIONAL
% Free-stream temperature (288.15 K by default)
FREESTREAM_TEMPERATURE= 293.0
% Reynolds number (non-dimensional, based on the free-stream values)
REYNOLDS_NUMBER= 1e+6
% Reynolds length (1 m by default)
REYNOLDS_LENGTH= 1.0
%
% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.25
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00
% Reference length for pitching, rolling, and yawing non-dimensional moment
REF_LENGTH= 1.0
% Reference area for force coefficients (0 implies automatic calculation)
REF_AREA= 1.0
%
% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
% Navier-Stokes wall boundary marker
MARKER_HEATFLUX= ( AIRFOIL, 0.0)
% Farfield boundary marker
MARKER_FAR= ( FARFIELD)
% Internal boundary marker(s) e.g. no boundary condition 
MARKER_INTERNAL= ( FWH1 )
% Marker(s) of the surface to be plotted or designed
MARKER_PLOTTING= (  AIRFOIL )
% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= (AIRFOIL)
%
% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES
% Courant-Friedrichs-Lewy condition of the finest grid
CFL_NUMBER= 20.0
% Adaptive CFL number (NO, YES)
CFL_ADAPT= NO
% Linear solver for the implicit formulation (BCGSTAB, FGMRES)
LINEAR_SOLVER= FGMRES
% Min error of the linear solver for the implicit formulation
LINEAR_SOLVER_ERROR= 1E-6
% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 5
%
% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
%
% Convective numerical method 
CONV_NUM_METHOD_FLOW= JST
% 1st, 2nd and 4th order artificial dissipation coefficients
JST_SENSOR_COEFF= (  0.5, 0.01 )
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT
%
% -------------------- TURBULENT NUMERICAL METHOD DEFINITION ------------------%
%
% Convective numerical method (SCALAR_UPWIND)
CONV_NUM_METHOD_TURB= SCALAR_UPWIND
% Muscl flow for turbulent simulation
MUSCL_TURB= NO
% Time discretization (EULER_IMPLICIT)
TIME_DISCRE_TURB= EULER_IMPLICIT
%
% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
% Convergence criteria (CAUCHY, RESIDUAL)
CONV_CRITERIA = RESIDUAL
% Field to apply Cauchy Criterion to
CONV_FIELD= REL_RMS_DENSITY
% Min value of the residual (log10 of the residual)
CONV_RESIDUAL_MINVAL= -9
% Start convergence criteria at iteration number
CONV_STARTITER= 10
% Number of elements to apply the criteria
CONV_CAUCHY_ELEMS= 10
% Epsilon to control the series convergence
CONV_CAUCHY_EPS= 1E-5
%
% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
% Output settings
HISTORY_WRT_FREQ_INNER=0
SCREEN_WRT_FREQ_INNER =1
SCREEN_OUTPUT=(INNER_ITER, TIME_ITER, RMS_ADJ_DENSITY, RMS_DENSITY, , REL_RMS_DENSITY,REL_RMS_ADJ_DENSITY, DRAG, TAVG_DRAG)
HISTORY_OUTPUT=(ITER, RMS_RES, AERO_COEFF, TAVG_AERO_COEFF, ADJ_AERO_COEFF)
%
% Mesh input file
MESH_FILENAME= naca0012_FFD.su2
% Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT= SU2
% Mesh output file
MESH_OUT_FILENAME= mesh_out.su2
% Restart flow input file
SOLUTION_FILENAME= restart_flow.dat
% Restart adjoint input file
SOLUTION_ADJ_FILENAME= restart_adj.dat
% Output file format (PARAVIEW, TECPLOT, STL)
TABULAR_FORMAT= CSV
% Output file convergence history (w/o extension) 
CONV_FILENAME= 0_history
% Output file restart flow
RESTART_FILENAME= restart_flow.dat
% Output file restart adjoint
RESTART_ADJ_FILENAME= restart_adj.dat
% Output file flow (w/o extension) variables
VOLUME_FILENAME= flow
% Output file surface flow coefficient (w/o extension)
SURFACE_FILENAME= surface_flow
% Writing solution file frequency
WRT_SOL_FREQ= 1
WRT_SOL_FREQ_DUALTIME= 1
% Writing convergence history frequency% Writing convergence history frequency (dual time, only written to screen)
WRT_CON_FREQ_DUALTIME= 10
WRT_CON_FREQ= 1
WRT_CSV_SOL=NO
%
% ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%
%
% Kind of deformation 
DV_KIND= FFD_CONTROL_POINT_2D
% Marker of the surface in which we are going apply the shape deformation
DV_MARKER= ( AIRFOIL )
% Parameters of the shape deformation
DV_PARAM= ( AIRFOIL_BOX, 0.0, 0.0, 1.0, 0.0)
% Value of the shape deformation
DV_VALUE= 0.01
% Surface deformation input filename (SURFACE_FILE DV only)
DV_FILENAME= mesh_motion.dat
%
% ------------------------ GRID DEFORMATION PARAMETERS ------------------------%
%
% Number of smoothing iterations for FEA mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 1000
% Number of nonlinear deformation iterations (surface deformation increments)
DEFORM_NONLINEAR_ITER= 1
% Print the residuals during mesh deformation to the console (YES, NO)
DEFORM_CONSOLE_OUTPUT= YES
% Factor to multiply smallest cell volume for deform tolerance (0.001 default)
DEFORM_LINEAR_SOLVER_ERROR =  1E-6
% Type of element stiffness imposed for FEA mesh deformation
DEFORM_STIFFNESS_TYPE= WALL_DISTANCE
% Visualization of volume deformation
VISUALIZE_VOLUME_DEF= YES
% Maximum number of iterations
OPT_ITERATIONS= 1
% Optimization objective function with scaling factor
OPT_OBJECTIVE= DRAG * 1.0
OPT_GRADIENT_FACTOR= 0.1
OPT_RELAX_FACTOR= 1
OPT_BOUND_UPPER= 0.05
OPT_BOUND_LOWER= -0.05
% Optimization constraint functions with scaling factors, separated by semicolons
OPT_CONSTRAINT= ( LIFT > 0.96 ) * 1.0
% Optimization design variables, separated by semicolons
DEFINITION_DV= ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 0, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 1, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 2, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 3, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 4, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 5, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 6, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 7, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 8, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 9, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 10, 1.0, 0.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 0, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 1, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 2, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 3, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 4, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 5, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 6, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 7, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 8, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 9, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 0, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 1, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 2, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 3, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 4, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 5, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 6, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 7, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 8, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 9, 10, 0.0, 1.0 ); ( 19, 1.0 | AIRFOIL | AIRFOIL_BOX, 10, 10, 0.0, 1.0 )
%
